name: Rust

on:
  push:
    branches: [ "main", "v[0-9]+.[0-9]+" ]
  pull_request:
    branches: [ "main", "v[0-9]+.[0-9]+" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Format
      run: cargo fmt --check
    - name: Clippy
      run: cargo clippy -- -D warnings
  build:
    name: Build and test
    env:
      E2E_MAX_WAITING_TIME: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Wasm32-wasi target
      run: rustup target add wasm32-wasi
    - name: Build Rust examples
      working-directory: ./examples
      run: make all
    - name: Build wws on release mode
      run: cargo build --verbose --release
    - name: Test
      run: cargo test --workspace --exclude wasm-workers-quick-js-engine -- --show-output
